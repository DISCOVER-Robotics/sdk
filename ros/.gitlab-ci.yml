variables:
  ROS_CI_REGISTRY_IMAGE: registry.qiuzhi.tech/airbot-play/ros-interface

ros:
  stage: build
  image: ${CI_REGISTRY}/airbot-play/arm-control:main
  script:
    - sed -i 's|http://archive.ubuntu.com/|http://mirrors.ustc.edu.cn/|' /etc/apt/sources.list
    - echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ focal main" > /etc/apt/sources.list.d/ros1-latest.list
    - apt-key add ros/ros.asc
    - dpkg -r --force-all python3-catkin-pkg
    - dpkg -r --force-all python3-rospkg
    - apt --fix-broken install -y
    - apt update && DEBIAN_FRONTEND=noninteractive TZ=Asia/Shanghai apt install -y ros-noetic-ros-base ros-noetic-kdl-parser ros-noetic-tf ros-noetic-joy iproute2
    - apt update && DEBIAN_FRONTEND=noninteractive TZ=Asia/Shanghai apt install -y python3 python3-bloom python3-pip fakeroot dpkg-dev debhelper libkdl-parser-dev
    - pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple rosdepc
    - rosdepc init
    - rosdepc update
    - echo "185.199.111.133 raw.githubusercontent.com" >> /etc/hosts
    - mkdir -p ~/ros_ws/src && cp -r ros/ ~/ros_ws/src/ && cd ~/ros_ws/src
    - bloom-generate rosdebian --ros-distro noetic  --os-name ubuntu --os-version focal
    - cd ~/ros_ws/src/ros
    - sed -i '/\<dh_shlibdeps\>/s/$/ --dpkg-shlibdeps-params=--ignore-missing-info/' debian/rules
    - fakeroot debian/rules binary
    - mkdir $CI_PROJECT_DIR/packages
    - mv ../*.deb $CI_PROJECT_DIR/packages/
  artifacts:
    paths:
      - packages/
    expire_in: 1 week

ros-docker:
  rules:
    - if: $CI_COMMIT_TAG || $CI_COMMIT_REF_PROTECTED == "true"
  stage: build
  image: registry.qiuzhi.tech/library/docker:24.0.5
  services:
    - name: registry.qiuzhi.tech/library/docker:24.0.5-dind-rootless
      alias: dockerhost
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  before_script:
    - docker info
  script:
    - docker context create builder
    - docker buildx create builder --use --driver docker-container --driver-opt image=moby/buildkit:master --driver-opt network=host
    - echo $HARBOR_USERNAME
    - echo "$HARBOR_PASSWORD" | docker login --username "$HARBOR_USERNAME" --password-stdin -- "$CI_REGISTRY"
    - docker buildx build -f ros/Dockerfile --platform linux/amd64 -t $ROS_CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --build-arg NPROC=$NPROC . --push

ros-upload:
  stage: release
  needs:
    - job: ros
      artifacts: true
  image: curlimages/curl:latest
  # rules:
  #   - if: $CI_COMMIT_TAG || $CI_COMMIT_REF_PROTECTED == "true"
  script:
    - export DEB_FILE=$(ls packages/ | grep deb)
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file packages/${DEB_FILE} \
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/ros1/${CI_COMMIT_REF_NAME}/${DEB_FILE}
